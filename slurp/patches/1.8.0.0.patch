diff --git a/dom/public/idl/core/nsIDOMDOMError.idl b/dom/public/idl/core/nsIDOMDOMError.idl
--- a/dom/public/idl/core/nsIDOMDOMError.idl
+++ b/dom/public/idl/core/nsIDOMDOMError.idl
@@ -33,16 +33,18 @@
  * and other provisions required by the GPL or the LGPL. If you do not delete
  * the provisions above, a recipient may use your version of this file under
  * the terms of any one of the MPL, the GPL or the LGPL.
  *
  * ***** END LICENSE BLOCK ***** */
 
 #include "domstubs.idl"
 
+interface nsIDOMDOMLocator;
+
 /**
  * The nsIDOMDOMError interface is "An non-zero implementation
  * dependent error code describing the error, or 0 if there is no
  * error." [sic]
  *
  * For more information on this interface please see
  * http://www.w3.org/TR/2002/WD-DOM-Level-3-Core-20020409/core.html
  */
diff --git a/dom/public/idl/core/nsIDOMDOMErrorHandler.idl b/dom/public/idl/core/nsIDOMDOMErrorHandler.idl
--- a/dom/public/idl/core/nsIDOMDOMErrorHandler.idl
+++ b/dom/public/idl/core/nsIDOMDOMErrorHandler.idl
@@ -33,16 +33,18 @@
  * and other provisions required by the GPL or the LGPL. If you do not delete
  * the provisions above, a recipient may use your version of this file under
  * the terms of any one of the MPL, the GPL or the LGPL.
  *
  * ***** END LICENSE BLOCK ***** */
 
 #include "domstubs.idl"
 
+interface nsIDOMDOMError;
+
 /**
  * The nsIDOMDOMErrorHandler interface is a basic interface for DOM
  * error handlers
  *
  * For more information on this interface please see
  * http://www.w3.org/TR/2002/WD-DOM-Level-3-Core-20020409/core.html
  */
 
diff --git a/embedding/browser/webBrowser/nsIPrintPreviewNavigation.idl b/embedding/browser/webBrowser/nsIPrintPreviewNavigation.idl
--- a/embedding/browser/webBrowser/nsIPrintPreviewNavigation.idl
+++ b/embedding/browser/webBrowser/nsIPrintPreviewNavigation.idl
@@ -65,21 +65,21 @@ interface nsIPrintPreviewNavigation  : n
   boolean	previousPage();
 
   /**
    * Go to a page to preview
    *
    * aPageNumber - Page to go preview
    * Return - PR_TRUE if success
    */
-  boolean	goToPage(unsigned long aPageNumber);
+  boolean	goToPage(in unsigned long aPageNumber);
 
 
   /**
    * Skip pages
    *
    * aNumPages - number of pages to skip including the current page. Neg. goes back
    * Return - true if success
    */
-  boolean	skipPages(long aNumPages);
+  boolean	skipPages(in long aNumPages);
 
 
 };
